const horariosRepository = require("./horariosRepository");

// Buscar todos os hor치rios
async function listarHorarios() {
  return await horariosRepository.getHorarios();
}

// Buscar um hor치rio espec칤fico
async function obterHorarioPorId(id) {
  if (!id) throw new Error("ID 칠 obrigat칩rio");
  return await horariosRepository.getHorarioById(id);
}

// Criar novo hor치rio
async function criarHorario(dados) {
  const { turma, dias, horario, faixa_etaria, responsavel_id } = dados;

  if (!turma || !dias || !horario || !faixa_etaria) {
    throw new Error("Campos obrigat칩rios: turma, dias, hor치rio e faixa et치ria");
  }

  return await horariosRepository.createHorario({
    turma,
    dias,
    horario,
    faixa_etaria,
    ordem: dados.ordem || null,
    responsavel_id: responsavel_id || null,
  });
}

// Atualizar hor치rio existente
async function atualizarHorario(id, dados) {
  if (!id) throw new Error("ID 칠 obrigat칩rio");

  const { turma, dias, horario, faixa_etaria, responsavel_id } = dados;

  if (!turma || !dias || !horario || !faixa_etaria) {
    throw new Error("Campos obrigat칩rios: turma, dias, hor치rio e faixa et치ria");
  }

  return await horariosRepository.updateHorario(id, {
    turma,
    dias,
    horario,
    faixa_etaria,
    ordem: dados.ordem || null,
    responsavel_id: responsavel_id || null,
  });
}

// Excluir hor치rio
async function excluirHorario(id) {
  if (!id) throw new Error("ID 칠 obrigat칩rio");
  return await horariosRepository.deleteHorario(id);
}
// 游댠 Atualizar ordem de m칰ltiplos hor치rios
async function atualizarOrdemHorarios(lista) {
  if (!Array.isArray(lista)) {
    throw new Error("A lista de hor치rios precisa ser um array");
  }

  return await horariosRepository.atualizarOrdemHorarios(lista);
}

module.exports = {
  listarHorarios,
  obterHorarioPorId,
  criarHorario,
  atualizarHorario,
  excluirHorario,
  atualizarOrdemHorarios,
};
